// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScientificReport.Data.DataAccess;

namespace ScientificReport.Migrations
{
    [DbContext(typeof(ReportContext))]
    [Migration("20190328212224_DepartmentWorksTable")]
    partial class DepartmentWorksTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ScientificReport.Data.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentWorkTopic");

                    b.Property<string>("Name");

                    b.Property<int?>("PublicationId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentWorkTopic");

                    b.HasIndex("PublicationId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("ScientificReport.Data.Models.DepartmentWork", b =>
                {
                    b.Property<string>("Topic")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<string>("Intro");

                    b.HasKey("Topic");

                    b.ToTable("DepartmentWorks");
                });

            modelBuilder.Entity("ScientificReport.Data.Models.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("Status");

                    b.Property<string>("Time");

                    b.Property<string>("Topic");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Publications");
                });

            modelBuilder.Entity("ScientificReport.Data.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contetnt");

                    b.Property<DateTime>("Date");

                    b.Property<string>("DepartmentWorkTopic");

                    b.Property<string>("Intro");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentWorkTopic");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("ScientificReport.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate");

                    b.Property<DateTime>("DegreeDate");

                    b.Property<string>("DegreeLevel");

                    b.Property<string>("Department");

                    b.Property<string>("Faculty");

                    b.Property<DateTime>("GraduationDate");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsApproved");

                    b.Property<string>("Name");

                    b.Property<int>("Role");

                    b.Property<string>("Title");

                    b.Property<DateTime>("TitleDate");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ScientificReport.Data.Models.Author", b =>
                {
                    b.HasOne("ScientificReport.Data.Models.DepartmentWork")
                        .WithMany("Authors")
                        .HasForeignKey("DepartmentWorkTopic");

                    b.HasOne("ScientificReport.Data.Models.Publication")
                        .WithMany("Authors")
                        .HasForeignKey("PublicationId");
                });

            modelBuilder.Entity("ScientificReport.Data.Models.Publication", b =>
                {
                    b.HasOne("ScientificReport.Data.Models.User")
                        .WithMany("Publications")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ScientificReport.Data.Models.Report", b =>
                {
                    b.HasOne("ScientificReport.Data.Models.DepartmentWork", "DepartmentWork")
                        .WithMany()
                        .HasForeignKey("DepartmentWorkTopic");

                    b.HasOne("ScientificReport.Data.Models.User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
